{"version":3,"sources":["./src/app/components/auth/register/register.component.ts","./src/app/components/auth/register/register.component.html","./src/app/services/router-services/auth-guard.service.ts","./src/app/components/post/edit-post/edit-post.component.html","./src/app/components/post/edit-post/edit-post.component.ts","./src/app/components/post/post-list/post-list.component.html","./src/app/components/post/post-list/post-list.component.ts","./src/app/router/app-routing.routings.ts","./src/app/components/post/view-post/view-post.component.ts","./src/app/components/post/view-post/view-post.component.html","./src/environments/environment.ts","./src/app/components/permission/permission.component.html","./src/app/components/permission/permission.component.ts","./src/app/components/auth/login/login.component.ts","./src/app/components/auth/login/login.component.html","./src/app/components/post/post-create/post-create.component.html","./src/app/components/post/post-create/post-create.component.ts","./src/app/components/error/error/error.component.ts","./src/app/components/error/error/error.component.html","./src/app/interceptors/auth.interceptor.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/services/user-service.service.ts","./src/app/app.module.ts","./src/app/services/auth-service.ts","./src/app/services/post-service.service.ts","./src/app/interceptors/error.interceptor.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAUO,MAAM,iBAAiB;IAO5B,YAAmB,WAAwB,EAAS,MAAc;QAA/C,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QALlE,eAAU,GAAG,8BAA8B,CAAC;QAC5C,kBAAa,GAAG,8CAA8C,CAAC;QAC/D,yBAAoB,GAAG,qCAAqC;QAC5D,cAAS,GAAG,KAAK,CAAC;IAEoD,CAAC;IAEvE,QAAQ;IACR,CAAC;IAED,UAAU,CAAC,IAAY;QACrB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACf,OAAO;SACR;aAAM;YACL,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,IAAI,CAAC,KAAK,CAAC,eAAe,EAAE;gBACtD,OAAO;aACR;SACF;QAED,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;YAC/E,yBAAyB;YACzB,sBAAsB;YACtB,IAAI,MAAM,CAAC,MAAM,KAAK,GAAG,EAAE;gBACzB,IAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;aAC7B;QACH,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;YACb,KAAK,CAAC,uCAAuC,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;IACL,CAAC;;kFAhCU,iBAAiB;iGAAjB,iBAAiB;;QCV9B,yEAAqE;QACnE,yEAA0F;QACxF,wEAA6C;QAAA,mEAAQ;QAAA,oEAAG;QAAA,8DAAG;QAAA,4DAAI;QAAC,mEAAO;QAAA,4DAAK;QAC5E,yEAA2C;QACzC,yEAAuB;QACrB,wEAAuB;QAAA,+EAAmB;QAAA,4DAAK;QAC/C,0EAAuB;QACrB,8EAC6G;QAA3G,uRAAU,mBAAwB,IAAC;QACnC,0EAAmB;QACjB,6EAA8C;QAAA,yEAAa;QAAA,4DAAQ;QACnE,4EAEqE;QACrE,2EAA8B;QAC5B,wDACF;QAAA,4DAAM;QACN,2EAAsC;QAAA,6IAE3B;QAAA,4DAAM;QACnB,4DAAM;QACN,iEAAI;QACJ,0EAAkB;QAChB,6EAA8C;QAAA,oEAAQ;QAAA,4DAAQ;QAC9D,4EACkI;QAClI,2EAA8B;QAC5B,wDACF;QAAA,4DAAM;QACN,2EAAyC;QAAA,wGAA4C;QAAA,4DAAM;QAC7F,4DAAM;QACN,0EAAkB;QAChB,6EAAqD;QAAA,4EAAgB;QAAA,4DAAQ;QAC7E,4EAEkI;QAClI,2EAA8B;QAC5B,wDACF;QAAA,4DAAM;QACN,2EAAgD;QAAA,kFAAsB;QAAA,4DAAM;QAC9E,4DAAM;QACN,8EAA8C;QAAA,oEAAQ;QAAA,4DAAS;QACjE,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;;QAvC0C,2DAAsE;QAAtE,wHAAsE;QAOtG,0DACF;QADE,0FACF;QAWE,2DACF;QADE,6FACF;QAOE,0DAAmG;QAAnG,wIAAmG;QAEnG,0DACF;QADE,oGACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BP,MAAM,gBAAgB;IAE3B,YAAmB,WAAwB,EAAS,MAAc;QAA/C,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IACvE,WAAW;QACT,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE,EAAE;YAClC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAChC,OAAO,KAAK,CAAC;SACd;QACD,OAAO,IAAI,CAAC;IACd,CAAC;;gFATU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB,mBAFf,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICcR,yEAAyC;IAAA,uDAAQ;IAAA,4DAAS;;;IAAjB,0DAAQ;IAAR,wEAAQ;;ACPtD,MAAM,iBAAiB;IAE5B,YAAoB,KAAqB,EAAS,WAAwB,EAAS,WAAwB,EAAS,MAAc;QAA9G,UAAK,GAAL,KAAK,CAAgB;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QAClI,cAAS,GAAG,KAAK,CAAC;QAClB,gBAAW,GAAa,EAAE,CAAC;IAF2G,CAAC;IASvI,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;QACrD,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,OAAO;QACL,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClD,IAAI,EAAE,KAAK,IAAI,EAAE;YACf,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;;gBAC1C,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;gBACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC;oBAC5B,KAAK,QAAE,IAAI,CAAC,WAAW,0CAAE,KAAK;oBAC9B,UAAU,QAAE,IAAI,CAAC,WAAW,0CAAE,UAAU;oBACxC,IAAI,QAAE,IAAI,CAAC,WAAW,0CAAE,IAAI;iBAC7B,CAAC;YACJ,CAAC,CAAC,CAAC;SACJ;IAEH,CAAC;IAED,WAAW,CAAC,QAAgB;QAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,QAAQ,CAAC,OAAO,EAAE;YACpB,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC;YAC9B,OAAO;SACR;QACD,MAAM,IAAI,GAAS;YACjB,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAE;YAC3C,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,KAAK;YAC3B,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;YACrC,UAAU,EAAE,QAAQ,CAAC,KAAK,CAAC,UAAU;YACrC,IAAI,EAAE,QAAQ,CAAC,KAAK,CAAC,IAAI;SAC1B,CAAC;QACF,+BAA+B;QAC/B,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,iCAAiC,CAAC,CAAC,CAAC;IAC9I,CAAC;;kFA9CU,iBAAiB;iGAAjB,iBAAiB;;;;;;;QDZ9B,yEAA4B;QAC1B,yEAAoD;QAClD,wEAAsC;QAAA,oEAAS;QAAA,4DAAK;QACtD,4DAAM;QACN,yEAAiC;QAC/B,6EAAiH;QAA3G,qRAAU,oBAAiB,IAAC;QAChC,yEAAiB;QACf,yEAAsB;QACpB,2EAA0C;QAAA,sEAAI;QAAA,sEAAU;QAAA,4DAAK;QAAA,4DAAQ;QACrE,2EACmG;QACnG,2EAAsC;QAAA,iHAAqD;QAAA,4DAAM;QACnG,4DAAM;QACN,0EAAsB;QACpB,6EAA+C;QAAA,sEAAI;QAAA,sEAAU;QAAA,4DAAK;QAAA,4DAAQ;QAC1E,4EAEwD;QACxD,gFAA8B;QAC5B,sHAA0D;QAC5D,4DAAW;QACX,2EAA2C;QAAA,8HAAkE;QAAA,4DAAM;QACrH,4DAAM;QACR,4DAAM;QAEN,iEAAM;QACN,6EAA4C;QAAA,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAAA,4DAAQ;QACpE,2EAA6C;QAC3C,6KACA;QAAA,iEAAM;QACN,yEAAuF;QAAA,uIAC7B;QAAA,4DAAI;QAChE,4DAAM;QACN,+EACkG;QAClG,iEAAI;QACJ,8EAAmE;QAAA,wEAAY;QAAA,4DAAS;QAC1F,4DAAO;QACT,4DAAM;QAER,4DAAM;;;QAnCgD,0DAA8D;QAA9D,wHAA8D;QAc/E,2DAAc;QAAd,oFAAc;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IEMnC,yEAE0D;IACxD,yEAAkB;IAAA,uDAAoC;;IAAA,4DAAK;IAC3D,oEAA0E;IAC1E,yEAAkB;IAChB,wEAAkC;IAAA,wEAAO;IAAA,uDACrC;IAAA,gEAAM;IAAA,wDAAqC;IAAA,4DAAQ;IAAA,4DAAI;IAC7D,4DAAK;IACL,0EAAgB;IACd,yEAA4E;IAC1E,kEACF;IAAA,4DAAI;IACJ,4EAA2C;IACzC,yEAC4C;IAC1C,4EAAU;IAAA,gEAAI;IAAA,4DAAW;IAC3B,4DAAI;IACJ,8EAC8C;IADtC,0XAAsC;IAE5C,4EAAU;IAAA,0EAAc;IAAA,4DAAW;IACrC,4DAAS;IACX,4DAAO;IACT,4DAAK;IACP,4DAAK;;;;IArBe,0DAAoC;IAApC,yJAAoC;IACpC,0DAAkD;IAAlD,mLAAkD;IAEzB,0DACrC;IADqC,mHACrC;IAAM,0DAAqC;IAArC,4GAAqC;IAG5C,0DAA2C;IAA3C,8KAA2C;IAIzC,0DAAgD;IAAhD,oLAAgD;;;;IAoBjD,yEAE4F;IAC1F,wEACyE;IAArD,ieAAiD,CAAC,KAAE;IAAC,uDAAa;IAAA,4DAAI;IAE5F,4DAAK;;;;;IANiB,yIAAoE;IACxF,8JAAsF;IAEnF,0DAA8E;IAA9E,iNAA8E;IACR,0DAAa;IAAb,gFAAa;;;;IARhG,yEAA0D;IACxD,yEAAiB;IACf,0EAAsB;IACpB,yEAAmD;IACjD,yHAMK;IACP,4DAAK;IACP,4DAAM;IACR,4DAAK;IACP,4DAAK;;;;IARsB,0DAAoD;IAApD,iMAAoD;;;IAnD7F,yEACwD;IACtD,yEAA4B;IAC1B,wEAAmD;IACjD,6EAC6D;IAC3D,uDACF;;IAAA,4DAAS;IACX,4DAAK;IACL,0EAC0D;IACxD,0EAAgC;IAC9B,0EAA8B;IAC5B,4EAAqC;IACnC,yEAAO;IACL,uHAwBK;IACL,qEACkG;IAIlG,qHAcK;IACP,4DAAQ;IACV,4DAAQ;IACV,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAM;IACR,4DAAM;;;;;IAlEsB,kHAAoC;IAG/B,0DAAqB;IAArB,4FAAqB;IACyB,0DAAsC;IAAtC,gGAAsC;IAE7G,0DACF;IADE,2JACF;IAEG,0DAAwB;IAAxB,6FAAwB;IAA0C,+FAAqC;IAOrE,0DAA6E;IAA7E,mKAA6E;IAyBxG,0DAA0F;IAA1F,kKAA0F;IAIvF,0DAA0C;IAA1C,+GAA0C;;;IAwB7D,0EAA0B;IACxB,yEAAwB;IAAA,yEAAc;IAAA,4DAAK;IAC3C,6EACmC;IAAjC,yLAAS,kBAAc,OAAO,CAAC,IAAC;IAAC,4DAAS;IAC9C,4DAAM;IACN,0EAAwB;IACtB,oEAAG;IAAA,qGAA0C;IAAA,4DAAI;IACnD,4DAAM;IACN,0EAA0B;IACxB,6EACkC;IAAhC,yLAAS,gBAAY,QAAQ,CAAC,IAAC;IAAC,iEAAM;IAAA,4DAAS;IACjD,8EAA8E;IAAjC,0LAAS,gBAAY,SAAS,CAAC,IAAC;IAAC,0EAAc;IAAA,4DAAS;IACvG,4DAAM;;AChFD,MAAM,iBAAiB;IAO5B,YAAmB,WAAwB,EAAU,YAAsB;QAAxD,gBAAW,GAAX,WAAW,CAAa;QAAU,iBAAY,GAAZ,YAAY,CAAU;QAL3E,UAAK,GAAW,EAAE,CAAC;QACnB,gBAAW,GAAa,EAAE,CAAC;QAC3B,oBAAe,GAAwB,IAAI,GAAG,EAAkB,CAAC;QACjE,0BAAqB,GAAwB,IAAI,GAAG,EAAkB,CAAC;IAEQ,CAAC;IAIhF,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE,CAAC;QAChB,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,qBAAqB,EAAE,CAAC,SAAS,CAAC,CAAC,KAAa,EAAE,EAAE;YAC5F,sBAAsB;YACtB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;YACrD,kDAAkD;QACpD,CAAC,CAAC,CAAC;IAEL,CAAC;IAED,WAAW;QACT,IAAI,CAAC,iBAAiB,CAAC,WAAW,EAAE,CAAC;IACvC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;IAC3C,CAAC;IAED,QAAQ,CAAC,MAAc;QACrB,IAAI,WAAW,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,cAAc,EAAE,mBAAmB,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAW,EAAE,EAAE;;YAC5H,IAAI,MAAM,IAAI,SAAS,EAAE;gBACvB,uBAAuB;gBAEvB,IAAI,CAAC,qBAAqB,CAAC,WAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,IAAI,MAAM,CAAC,0CAAE,UAAU,KAAI,EAAE,CAAC,CAAC;gBAEnF,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;aACrC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kBAAkB,CAAC,UAAkB,EAAE,IAAa;QAClD,qBAAqB;QACrB,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,KAAK,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAC9F,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAE3E,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAC;QACvC,OAAO,eAAe,CAAC;IACzB,CAAC;IAED,OAAO,CAAC,SAAkB;QACxB,MAAM,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC;QAC1D,OAAO,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;IACjE,CAAC;IAED,YAAY,CAAC,MAAa;QACxB,IAAI,CAAC,QAAQ,EAAE,CAAC;QACf,MAAM,CAAC,MAA4B,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QAC9D,UAAU,CAAC,GAAG,EAAE;YACb,MAAM,CAAC,MAA4B,CAAC,IAAI,EAAE,CAAC;YAC3C,MAAM,CAAC,MAA4B,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QACnE,CAAC,EAAE,IAAI,CAAC,CAAC;IACX,CAAC;IAED,eAAe,CAAC,KAAa;QAC3B,MAAM,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,IAAI,EAAE,CAAC;QAC1E,IAAI,OAAO,KAAK,EAAE,IAAI,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE;YACpD,OAAO,0BAA0B,CAAC;SACnC;QACD,OAAO,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;IAED,oBAAoB,CAAC,UAAkB,EAAE,OAAe;QACtD,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,UAAU,EAAE,OAAO,CAAC,CAAC;IACtD,CAAC;IAED,wBAAwB,CAAC,UAAkB;QACzC,OAAO,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,UAAU,CAAE,CAAC;IACrD,CAAC;IAED,qBAAqB,CAAC,UAAkB;QACtC,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,UAAU,KAAK,UAAU,CAAC,CAAC;QAE9E,MAAM,yBAAyB,GAAG,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACxE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,EAAE,yBAAyB,CAAC,CAAC;QAChE,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,GAAG,yBAAyB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IAClL,CAAC;;kFAxFU,iBAAiB;iGAAjB,iBAAiB;;;;;;QDX9B,yEAA4B;QAC1B,yEAAqD;QACnD,wEAA2B;QAAA,uEAAY;QAAA,4DAAK;QAC5C,wEAA2B;QAAA,uDAAa;QAAA,4DAAK;QAC/C,4DAAM;QACN,yEAA6B;QAC3B,4EAAiH;QAA/B,+IAAS,wBAAoB,IAAC;QAC9G,2EAAU;QAAA,kEAAO;QAAA,4DAAW;QAAC,2EAC/B;QAAA,4DAAS;QACX,4DAAM;QACN,iHAkEM;QACR,4DAAM;QACN,4MAcc;;QAzFiB,0DAAa;QAAb,8EAAa;QAQjB,0DAAgB;QAAhB,oFAAgB;;;;;;;;;;;;;;AEV3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AAC2B;AACR;AACS;AACE;AACA;AACM;AACN;AACD;;;AACpF,kGAAkG;AAClG,kGAAkG;AAGlG,MAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,gGAAiB,EAAE,WAAW,EAAE,CAAC,6FAAgB,CAAC,EAAE;IAC3E,EAAE,IAAI,EAAE,aAAa,EAAE,SAAS,EAAE,sGAAmB,EAAE,WAAW,EAAE,CAAC,6FAAgB,CAAC,EAAE;IACxF,EAAE,IAAI,EAAE,eAAe,EAAE,SAAS,EAAE,gGAAiB,EAAE,WAAW,EAAE,CAAC,6FAAgB,CAAC,EAAE;IACxF,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,gGAAiB,EAAE,WAAW,EAAE,CAAC,6FAAgB,CAAC,EAAE;IACnF,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,+FAAmB,EAAE,WAAW,EAAE,CAAC,6FAAgB,CAAC,EAAE;IAClF,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qFAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8FAAiB,EAAE;CACnD,CAAC;AAOK,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAJlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAGX,gBAAgB,uFAHjB,4DAAY;;;;;;;;;;;;;;;;;;;;;AChBjB,MAAM,iBAAiB;IAI5B,YAAoB,KAAqB,EAAU,WAAwB;QAAvD,UAAK,GAAL,KAAK,CAAgB;QAAU,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEhF,QAAQ;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,OAAO;QACL,MAAM,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAClD,IAAI,EAAE,KAAK,IAAI,EAAE;YACf,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;gBACpC,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;YACvB,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAED,OAAO,CAAC,SAAkB;QACxB,MAAM,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,EAAE,CAAC;QAC1D,OAAO,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC;IACjE,CAAC;;kFAtBU,iBAAiB;iGAAjB,iBAAiB;QCV9B,yEAA4B;QAC1B,yEAAoD;QAClD,wEAAsC;QAAA,uEAAY;QAAA,4DAAK;QACzD,4DAAM;QAGN,wEAAsB;QAAA,uDAAyC;QAAA,4DAAK;QACpE,uEAAkC;QAAA,uDACmD;QAAA,4DAAI;QACzF,gEAAM;QAEN,oEAAwD;QAG1D,4DAAM;;QARkB,0DAAyC;QAAzC,4IAAyC;QAC7B,0DACmD;QADnD,uSACmD;QAGnE,0DAA+B;QAA/B,0LAA+B;;;;;;;;;;;;;;ACXnD;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;;;ICF3D,qEAA8C;IAC5C,wEAAgB;IAAA,uDAA0B;;IAAA,4DAAK;IAC/C,yEAAkB;IACd,4EAC4C;IAA5C,oXAA2C;IAD3C,4DAC4C;IAChD,4DAAK;IACP,4DAAK;;;;IALa,0DAA0B;IAA1B,+IAA0B;IAEuC,0DAA2B;IAA3B,yGAA2B;IAAxD,wFAA4B;;;;IAY1E,yEAEkE;IAChE,wEAC+B;IAA7B,iWAAyB,CAAC,KAAE;IAAC,uDAAa;IAAA,4DAAI;IAClD,4DAAK;;;;IALiB,2GAA0C;IAC9D,gIAA4D;IAEzD,0DAAoD;IAApD,mLAAoD;IACxB,0DAAa;IAAb,gFAAa;;;;IARtD,qEAAsB;IACpB,yEAAiB;IACf,0EAAsB;IACpB,yEAAmD;IACjD,oHAKK;IACP,4DAAK;IACP,4DAAM;IACR,4DAAK;IACP,4DAAK;;;IAPsB,0DAA0B;IAA1B,oKAA0B;;;IAa3D,0EAA0B;IACxB,yEAAwB;IAAA,yEAAc;IAAA,4DAAK;IAC3C,6EACmC;IAAjC,2LAAS,kBAAc,OAAO,CAAC,IAAC;IAAC,4DAAS;IAC9C,4DAAM;IACN,0EAAwB;IACtB,oEAAG;IAAA,qGAA0C;IAAA,4DAAI;IACnD,4DAAM;IACN,0EAA0B;IACxB,6EACkC;IAAhC,2LAAS,gBAAY,QAAQ,CAAC,IAAC;IAAC,iEAAM;IAAA,4DAAS;IACjD,8EAA8E;IAAjC,4LAAS,gBAAY,SAAS,CAAC,IAAC;IAAC,0EAAc;IAAA,4DAAS;IACvG,4DAAM;;AC9CD,MAAM,mBAAmB;IAQ9B,YAAmB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAN3C,UAAK,GAA0D,EAAE,CAAC;QAClE,UAAK,GAAW,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAClC,gBAAW,GAAW,CAAC,CAAC;IAIuB,CAAC;IAEhD,QAAQ;QACN,IAAI,CAAC,QAAQ,EAAE;QACf,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,qBAAqB,EAAE,CAAC,SAAS,CAAC,CAAC,KAA4D,EAAE,EAAE;YAC1I,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,2BAA2B;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,EAAE,CAC3D,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IACtG,CAAC;IAED,OAAO,CAAC,MAAc;QACpB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC;IAC5B,CAAC;IAED,gBAAgB,CAAC,MAAa,EAAE,QAAe;QAC7C,MAAM,SAAS,GAAI,QAAQ,CAAC,MAA2B,CAAC,OAAO,CAAC;QAEhE,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;IACrD,CAAC;;sFA/BU,mBAAmB;mGAAnB,mBAAmB;QDThC,yEAA4B;QAC1B,yEAAqD;QACnD,wEAA2B;QAAA,uEAAY;QAAA,4DAAK;QAC9C,4DAAM;QACN,sEAAK;QACH,2EAAmD;QACjD,wEAAO;QACL,qEAAI;QACF,wEAAgB;QAAA,+DAAI;QAAA,4DAAK;QACzB,yEAAgB;QAAA,iFAAqB;QAAA,4DAAK;QAC5C,4DAAK;QACP,4DAAQ;QACR,yEAAO;QACL,+GAMK;QAEL,oEACK;QAEL,+GAaK;QACP,4DAAQ;QACV,4DAAQ;QACV,4DAAM;QACR,4DAAM;QACN,8MAcc;;QA3Ce,2DAAU;QAAV,8EAAU;QAQb,0DAAsC;QAAtC,kGAAsC;QAGnD,0DAAe;QAAf,+EAAe;;;;;;;;;;;;;;;;;;;;;;;;AEfrB,MAAM,cAAc;IAMzB,YAAmB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAJ3C,eAAU,GAAG,8BAA8B,CAAC;QAC5C,kBAAa,GAAG,8CAA8C;QAC9D,cAAS,GAAG,KAAK,CAAC;IAE6B,CAAC;IAEhD,QAAQ;IACR,CAAC;IAED,OAAO,CAAC,IAAY;QAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,IAAI,CAAC,OAAO,EAAE;YAChB,OAAO;SACR;QACD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;YACxE,oBAAoB;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;;4EAnBU,cAAc;8FAAd,cAAc;;QCT3B,yEAAqE;QACnE,yEAA0F;QACxF,wEAA6C;QAAA,2EAAgB;QAAA,4DAAK;QAClE,yEAA2C;QACzC,yEAAuB;QACrB,wEAAuB;QAAA,wEAAa;QAAA,4DAAK;QACzC,yEAAuB;QACrB,6EACsE;QADW,mRAAU,gBAAkB,IAAC;QAE5G,0EAAmB;QACjB,6EAA8C;QAAA,yEAAa;QAAA,4DAAQ;QACnE,4EAEqE;QACrE,2EAA8B;QAC5B,wDACF;QAAA,4DAAM;QACN,2EAAsC;QAAA,6IAE3B;QAAA,4DAAM;QACnB,4DAAM;QACN,iEAAI;QACJ,0EAAkB;QAChB,6EAA8C;QAAA,oEAAQ;QAAA,4DAAQ;QAC9D,4EACsI;QACtI,2EAA8B;QAC5B,wDACF;QAAA,4DAAM;QACN,2EAAyC;QAAA,yEAAY;QAAA,iFAAqB;QAAA,4DAAI;QAAA,4DAAM;QACtF,4DAAM;QACN,8EAA8C;QAAA,kEAAM;QAAA,4DAAS;QAC/D,4DAAO;QACT,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;;;QA7BM,0DAAmE;QAAnE,wHAAmE;QAO/D,0DACF;QADE,0FACF;QAWE,2DACF;QADE,6FACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICTF,yEAAyC;IAAA,uDAAQ;IAAA,4DAAS;;;IAAjB,0DAAQ;IAAR,wEAAQ;;ACPtD,MAAM,mBAAmB;IAE9B,YAAmB,WAAwB,EAAS,WAAwB,EAAS,MAAc;QAAhF,gBAAW,GAAX,WAAW,CAAa;QAAS,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;QACnG,cAAS,GAAG,KAAK,CAAC;QAClB,gBAAW,GAAa,EAAE,CAAC;IAF4E,CAAC;IAIxG,QAAQ;QACN,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,EAAE,CAAC;IACvD,CAAC;IAED,mCAAmC;IACnC,6BAA6B;IAC7B,6BAA6B;IAE7B,YAAY,CAAC,QAAgB;QAC3B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,QAAQ,CAAC,OAAO,EAAE;YACpB,OAAO;SACR;QACD,MAAM,IAAI,GAAS;YACjB,KAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,KAAK;YAC3B,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;YACrC,UAAU,EAAE,QAAQ,CAAC,KAAK,CAAC,UAAU;YACrC,IAAI,EAAE,QAAQ,CAAC,KAAK,CAAC,IAAI;SAC1B,CAAC;QACF,4DAA4D;QAC5D,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,KAAK,CAAC,iCAAiC,CAAC,CAAC,CAAC;IACvI,CAAC;;sFA3BU,mBAAmB;mGAAnB,mBAAmB;;QDZhC,yEAA4B;QAC1B,yEAAoD;QAClD,wEAAsC;QAAA,sEAAW;QAAA,4DAAK;QACxD,4DAAM;QACN,yEAAiC;QAC/B,6EAAkH;QAA5G,uRAAU,qBAAkB,IAAC;QACjC,yEAAiB;QACf,yEAAsB;QACpB,2EAA0C;QAAA,sEAAI;QAAA,sEAAU;QAAA,4DAAK;QAAA,4DAAQ;QACrE,2EACmG;QACnG,2EAAsC;QAAA,iHAAqD;QAAA,4DAAM;QACnG,4DAAM;QACN,0EAAsB;QACpB,6EAA+C;QAAA,sEAAI;QAAA,sEAAU;QAAA,4DAAK;QAAA,4DAAQ;QAC1E,4EAEyD;QACzD,gFAA8B;QAC5B,wHAA0D;QAC5D,4DAAW;QACX,2EAA2C;QAAA,8HAAkE;QAAA,4DAAM;QACrH,4DAAM;QACR,4DAAM;QAEN,iEAAM;QACN,6EAA4C;QAAA,sEAAI;QAAA,mEAAO;QAAA,4DAAK;QAAA,4DAAQ;QACpE,2EAA6C;QAC3C,6KACA;QAAA,iEAAM;QACN,yEAAuF;QAAA,uIAC7B;QAAA,4DAAI;QAChE,4DAAM;QACN,+EACkG;QAClG,iEAAI;QACJ,8EAAmE;QAAA,gEAAI;QAAA,4DAAS;QAClF,4DAAO;QACT,4DAAM;QAER,4DAAM;;;QAnCiD,0DAA8D;QAA9D,wHAA8D;QAchF,2DAAc;QAAd,oFAAc;;;;;;;;;;;;;;AElBnD;AAAA;AAAA;AAAA;AAAA;AAA2D;;;;;ICAzD,yEAA0B;IACxB,wEAAwB;IAAA,wEAAa;IAAA,4DAAK;IAC1C,4EACmC;IAAjC,oLAAS,iBAAc,OAAO,CAAC,IAAC;IAAC,4DAAS;IAC9C,4DAAM;IACN,yEAAwB;IACtB,oEAAG;IAAA,uDAAgB;IAAA,4DAAI;IACzB,4DAAM;IACN,yEAA0B;IACxB,4EAA8E;IAA9B,oLAAS,eAAY,MAAM,CAAC,IAAC;IAAC,+DAAI;IAAA,4DAAS;IAC7F,4DAAM;;;IAJD,0DAAgB;IAAhB,oFAAgB;;ADEhB,MAAM,cAAc;IAEzB,YAA4C,IAAyB,EAAU,YAAsB;QAAzD,SAAI,GAAJ,IAAI,CAAqB;QAAU,iBAAY,GAAZ,YAAY,CAAU;IAAI,CAAC;IAG1G,QAAQ;QACN,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,EAAE,cAAc,EAAE,mBAAmB,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;IACpG,CAAC;;4EAPU,cAAc,kEAEL,wEAAe;8FAFxB,cAAc;;;;;;QCT3B,uMAYc;;;;;;;;;;;;;;;;;;;;ACAP,MAAM,eAAe;IAE1B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEjD,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACpD,MAAM,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QAE9C,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;QAC3D,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,eAAe,EAAE,SAAS,GAAG,SAAS,CAAC,CAAC;QAE/D,MAAM,WAAW,GAAG,OAAO,CAAC,KAAK,CAAC;YAChC,OAAO,EAAE,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC,MAAM,CAAC,eAAe,EAAE,SAAS,GAAG,SAAS,CAAC;SACnH,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;IAClC,CAAC;;8EAdU,eAAe;kGAAf,eAAe,WAAf,eAAe;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICElB,yEAA6E;IAC3E,yEAAqB;IACnB,wEAAwH;IACtH,2EAAU;IAAA,gEAAK;IAAA,4DAAW;IAAC,uEAC7B;IAAA,4DAAI;IACN,4DAAK;IACL,yEAAqB;IACnB,wEAAkI;IAChI,2EAAU;IAAA,sEAAW;IAAA,4DAAW;IAAC,yEACnC;IAAA,4DAAI;IACN,4DAAK;IACP,4DAAK;;IATmB,0DAAoB;IAApB,6IAAoB;IAKpB,0DAA8B;IAA9B,6IAA8B;;;;;IAKtD,yEAA6F;IAC3F,yEAAqB;IACnB,wEAA6H;IAC3H,2EAAU;IAAA,mEAAQ;IAAA,4DAAW;IAAC,yEAChC;IAAA,4DAAI;IACN,4DAAK;IACL,yEAAqB;IACnB,wEAAuC;IAAnB,wSAAkB;IACpC,2EAAU;IAAA,iEAAM;IAAA,4DAAW;IAAC,qEAC9B;IAAA,4DAAI;IACN,4DAAK;IACP,4DAAK;;IATmB,0DAAyB;IAAzB,6IAAyB;;;;IAY7C,yEAAuC;IACrC,wEAAuF;IACrF,2EAAU;IAAA,qEAAU;IAAA,4DAAW;IAAC,qEAClC;IAAA,4DAAI;IACN,4DAAK;;IAHiB,0DAA4B;IAA5B,6IAA4B;;;;IAIlD,yEAAwC;IACtC,wEAAoF;IAClF,2EAAU;IAAA,gEAAK;IAAA,4DAAW;IAAC,mEAC7B;IAAA,4DAAI;IACN,4DAAK;;IAHiB,0DAAyB;IAAzB,6IAAyB;;;IAPjD,yEAA4C;IAC1C,sHAIK;IACL,sHAIK;IACP,4DAAK;;;IAVmB,0DAAe;IAAf,kFAAe;IAKf,0DAAgB;IAAhB,mFAAgB;;ACnC7C,MAAM,YAAY;IACvB,YAAmB,WAAwB,EAAS,MAAc;QAA/C,gBAAW,GAAX,WAAW,CAAa;QAAS,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IACvE,QAAQ;IACR,CAAC;IAED,OAAO;QACL,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;IAED,MAAM;QACJ,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC5B,CAAC;;wEAXU,YAAY;4FAAZ,YAAY;QDVzB,uEAAM;QACJ,sEAAK;QACH,yEAAyD;QACvD,yEAA6B;QAC3B,uEAA6C;QAC3C,oEACwC;QACxC,0EAAmB;QAAA,oFAAyB;QAAA,4DAAO;QACrD,4DAAI;QACJ,4EACkF;QAChF,qEAAyC;QAC3C,4DAAS;QACT,0EAAsD;QACpD,yGAWK;QACL,yGAWK;QACL,uMAac;QAChB,4DAAM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QACN,4EAA+B;QACjC,4DAAO;;;QArDyB,0DAAoB;QAApB,6IAAoB;QAUG,0DAA8B;QAA9B,8FAA8B;QAY9B,0DAAgC;QAAhC,8FAAgC;;;;;;;;;;;;;;AExBvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2C;AACN;;;AAK9B,MAAM,WAAW;IAKtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAHpC,UAAK,GAA0D,EAAE,CAAC;QAC1D,iBAAY,GAAG,IAAI,4CAAO,EAAyD,CAAC;IAEpD,CAAC;IAEzC,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,GAAG,CAAoF,WAAW,CAAC;aAC1G,IAAI,CAAC,0DAAG,CAAC,CAAC,QAAQ,EAAE,EAAE;YACrB,OAAO,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,EAAE;gBACtC,OAAO;oBACL,EAAE,EAAE,IAAI,CAAC,GAAG;oBACZ,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,WAAW,EAAE,IAAI,CAAC,WAAW;iBAC9B,CAAC;YACJ,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;aACF,SAAS,CAAC,CAAC,YAAY,EAAE,EAAE;YAC1B,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC;YAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;QACL,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;IACzB,CAAC;IAED,qBAAqB;QACnB,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;IAC1C,CAAC;IAED,cAAc,CAAC,MAAc,EAAE,eAAwB;QACrD,gCAAgC;QAChC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAoF,yBAAyB,MAAM,EAAE,EAAE,EAAC,eAAe,EAAC,CAAG,CAAC,SAAS,EAAE,CAAC;IACxK,CAAC;;sEAhCU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;ACLpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACb;AAC6B;AAE3B;AAC/C,gGAAgG;AAEzC;AACwB;AACd;AACQ;AACS;AAChB;AACkB;AACA;AAEpF,qCAAqC;AACkB;AACmC;AACtB;AACT;AACyB;AACD;;AAgC5E,MAAM,SAAS;;kEAAT,SAAS;yFAAT,SAAS,cAFR,2DAAY;8FAFb,CAAC,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,8EAAe,EAAE,KAAK,EAAE,IAAI,EAAE;QAClF,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,iFAAgB,EAAE,KAAK,EAAE,IAAI,EAAE,CAAC,YAd/D;YACP,6EAAgB;YAChB,uEAAa;YACb,6EAAgB;YAChB,0DAAW;YAEX,oEAAa;YACb,yEAAe;YACf,qEAAS;YAET,4FAAuB;YACvB,qEAAgB;SACjB;oIAKU,SAAS,mBA3BlB,2DAAY;QACZ,wBAAwB;QACxB,iGAAiB;QACjB,iGAAiB;QACjB,qFAAc;QACd,8FAAiB;QACjB,uGAAmB;QACnB,iGAAiB;QACjB,gGAAmB,aAGnB,6EAAgB;QAChB,uEAAa;QACb,6EAAgB;QAChB,0DAAW;QAEX,oEAAa;QACb,yEAAe;QACf,qEAAS;QAET,4FAAuB;QACvB,qEAAgB;;;;;;;;;;;;;;;;;;;;;AC3Cb,MAAM,WAAW;IAGpB,YAAoB,IAAgB,EAAS,MAAc;QAAvC,SAAI,GAAJ,IAAI,CAAY;QAAS,WAAM,GAAN,MAAM,CAAQ;QAFnD,UAAK,GAAkB,EAAE,CAAC;QAC1B,UAAK,GAAG,EAAE,CAAC;IAC4C,CAAC;IAEhE,UAAU,CAAC,KAAa,EAAE,QAAgB;QACtC,MAAM,QAAQ,GAAa,EAAE,KAAK,EAAE,QAAQ,EAAE,CAAC;QAC/C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,kBAAkB,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IAC7F,CAAC;IAED,sBAAsB;IACtB,KAAK,CAAC,KAAa,EAAE,QAAgB;QACjC,MAAM,QAAQ,GAAa;YACvB,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ;SACnC,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAoB,iBAAiB,EAAE,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YAC9F,MAAM,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC;YAC7B,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;YACnB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;QAChC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,kCAAkC;IAClC,MAAM;QACF,IAAI,CAAC,IAAI,CAAC,IAAI,CAAsB,kBAAkB,EAAE,EAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAC,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;YACrG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACrC,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,gEAAgE;QAChE,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC7B,CAAC;IAED,QAAQ;QACJ,OAAO,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC;IAC9B,CAAC;IAED,UAAU;QACN,OAAO,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAE,IAAI,IAAI,CAAC,CAAC;IAC3C,CAAC;IAED,QAAQ;QACJ,OAAO,IAAI,CAAC,KAAK,CAAC;IACtB,CAAC;;sEA3CQ,WAAW;8FAAX,WAAW,WAAX,WAAW,mBADE,MAAM;;;;;;;;;;;;;;;;;;;;;ACHW;AACmB;AACzB;;;AAK9B,MAAM,WAAW;IAMtB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAJ5B,UAAK,GAAW,EAAE,CAAC;QACnB,iBAAY,GAAG,IAAI,4CAAO,EAAU,CAAC;QACrC,gBAAW,GAAa,EAAE,CAAC;IAEK,CAAC;IAEzC,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,GAAG,CAAqC,YAAY,CAAC;aAC5D,IAAI,CAAC,0DAAG,CAAC,CAAC,QAAQ,EAAE,EAAE;YACrB,OAAO,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAS,EAAE,EAAE;gBACtC,OAAO;oBACL,EAAE,EAAE,IAAI,CAAC,GAAG;oBACZ,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,SAAS,EAAE,IAAI,CAAC,SAAS,IAAI,EAAE;oBAC/B,QAAQ,EAAE,IAAI,CAAC,QAAQ;oBACvB,UAAU,EAAE,IAAI,CAAC,UAAU;oBAC3B,IAAI,EAAE,IAAI,CAAC,IAAI;iBAChB,CAAC;YACJ,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;aACF,SAAS,CAAC,CAAC,YAAY,EAAE,EAAE;YAC1B,IAAI,CAAC,KAAK,GAAG,YAAY,CAAC;YAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;QAC1C,CAAC,CAAC,CAAC;QACL,OAAO,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;IACzB,CAAC;IAEK,OAAO,CAAC,EAAU,EAAE,MAAe,KAAK;;;YAC5C,OAAO,GAAG,IAAI,KAAK,CAAC,CAAC,OAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,mCAAI,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;gBAClG,OAAO,CAAC,CAAC,IAAI,CAAC;YAChB,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;gBAC1C,OAAO,CAAC,CAAC,IAAI,CAAC;YAChB,CAAC,CAAC,CAAC;;KACJ;IAED,SAAS,CAAC,EAAU,EAAE,MAAe,KAAK;QACxC,MAAM,MAAM,GAAG,IAAI,+DAAU,EAAE,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;QACzE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkC,YAAY,EAAE,EAAE,MAAM,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;IAC9F,CAAC;IAEK,OAAO,CAAC,IAAU;;YACtB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAsB,YAAY,EAAE,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,gBAAgB,EAAE,EAAE;gBACnG,yCAAyC;gBACzC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBACtB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;gBACxC,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAClC,CAAC,CAAC,CAAC;QACL,CAAC;KAAA;IAEK,UAAU,CAAC,IAAU;;YACzB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAuB,mBAAmB,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC,IAAI,CAAC,CAAC,gBAAgB,EAAE,EAAE;gBACpH,yCAAyC;gBACzC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC;gBAC7D,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC;gBACxC,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAClC,CAAC,CAAC;QACJ,CAAC;KAAA;IAED,qBAAqB;QACnB,OAAO,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,CAAC;IAC1C,CAAC;IAED,UAAU,CAAC,MAAc;QACvB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,cAAc,MAAM,EAAE,CAAC;aACrC,SAAS,CAAC,GAAG,EAAE;YACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,KAAK,MAAM,CAAC,CAAC;YAC7D,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACxC,gCAAgC;QAClC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,cAAc;QACZ,OAAO,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC,CAAC;IAClI,CAAC;;sEA3EU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;ACCpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA8C;AACF;AAE+B;;;AAIpE,MAAM,gBAAgB;IAE3B,YAAoB,MAAiB;QAAjB,WAAM,GAAN,MAAM,CAAW;IAAI,CAAC;IAE1C,SAAS,CAAC,OAAyB,EAAE,IAAiB;QACpD,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAC9B,iEAAU,CAAC,CAAC,KAAwB,EAAE,EAAE;YACtC,IAAI,YAAY,GAAG,gBAAgB,CAAC;YACpC,IAAI,KAAK,CAAC,OAAO,EAAE;gBACjB,YAAY,GAAG,KAAK,CAAC,OAAO,CAAC;aAC9B;YACD,sBAAsB;YACtB,6BAA6B;YAE7B,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,sFAAc,EAAE,EAAE,IAAI,EAAE,EAAE,OAAO,EAAE,YAAY,EAAE,EAAE,CAAC,CAAC;YAEtE,OAAO,uDAAU,CAAC,KAAK,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC,CAAC;IACR,CAAC;;gFAlBU,gBAAgB;mGAAhB,gBAAgB,WAAhB,gBAAgB;;;;;;;;;;;;;;;;;;;ACfkB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/services/auth-service';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  emailError = \"Email format: example@gov.za\";\n  passwordError = \"Permitted characters: 0-9, a-z, A-Z, @, *, #\";\n  passwordConfirmError = \"The passwords entered do not match.\"\n  submitted = false;\n\n  constructor(public authService: AuthService, public router: Router) { }\n\n  ngOnInit() {\n  }\n\n  onRegister(form: NgForm): void {\n    this.submitted = true;\n    if (!form.valid) {\n      return;\n    } else {\n      if (form.value.password !== form.value.passwordConfirm) {\n        return;\n      }\n    }\n\n    this.authService.createUser(form.value.email, form.value.password).then(result => {\n      //if created user success\n      // console.log(result)\n      if (result.status === 201) {\n        form.resetForm();\n        this.router.navigate(['/']);\n      }\n    }).catch(err => {\n      alert('An error occurred trying to register.');\n    });\n  }\n}\n","<div id=\"loginBackground\" class=\"container-fluid bg-secondary h-100\">\n  <div class=\"container d-flex flex-column h-100 justify-content-center align-items-center\">\n    <h1 class=\"display-4 text-center text-white\">Welcome <b>new</b> member!</h1>\n    <div class=\"card\" style=\"min-width: 50vw;\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">Secure registration</h5>\n        <div class=\"container\">\n          <form name=\"login justify-content-center align-items-center\" #registerForm=\"ngForm\"\n            (submit)=\"onRegister(registerForm)\" [ngClass]=\"(registerForm.invalid && submitted) ? 'was-validated' : ''\">\n            <div class=\" mb-3\">\n              <label for=\"usernameInput\" class=\"form-label\">Email address</label>\n              <input id=\"usernameInput\" class=\"form-control\" type=\"text\" ngModel name=\"email\"\n                placeholder=\"example@gov.za\" required minlength=\"5\" pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n                #email=\"ngModel\" aria-describedby=\"emailHelp\" autocomplete=\"email\">\n              <div class=\"invalid-feedback\">\n                {{emailError}}\n              </div>\n              <div id=\"emailHelp\" class=\"form-text\">Please use your department allocated email address, usually ending\n                in\n                \".gov.za\"</div>\n            </div>\n            <hr>\n            <div class=\"mb-3\">\n              <label for=\"passwordInput\" class=\"form-label\">Password</label>\n              <input id=\"passwordInput\" type=\"password\" class=\"form-control\" pattern=\"^([a-zA-Z0-9@*#]{8,15})$\" ngModel\n                name=\"password\" placeholder=\"Password\" required #password=\"ngModel\" aria-describedby=\"passwordHelp\" autocomplete=\"new-password\">\n              <div class=\"invalid-feedback\">\n                {{passwordError}}\n              </div>\n              <div id=\"passwordHelp\" class=\"form-text\">Permitted characters: 0-9, a-z, A-Z, @, *, #</div>\n            </div>\n            <div class=\"mb-3\">\n              <label for=\"passwordInputConfirm\" class=\"form-label\">Confirm Password</label>\n              <input id=\"passwordInputConfirm\" type=\"password\" class=\"form-control\" ngModel name=\"passwordConfirm\"\n                placeholder=\"Repeat password\" required #password=\"ngModel\" aria-describedby=\"passwordConfirmHelp\"\n                [ngClass]=\"(registerForm.value.password == registerForm.value.passwordConfirm) ? '' : 'is-invalid'\" autocomplete=\"new-password\">\n              <div class=\"invalid-feedback\">\n                {{passwordConfirmError}}\n              </div>\n              <div id=\"passwordConfirmHelp\" class=\"form-text\">Same password as above</div>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\">Register</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { AuthService } from '../auth-service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n\n  constructor(public authService: AuthService, public router: Router) { }\n  canActivate(): boolean {\n    if (!this.authService.isLoggedIn()) {\n      this.router.navigate([\"login\"]);\n      return false;\n    }\n    return true;\n  }\n\n}\n","<div class=\"container pb-5\">\n  <div class=\"d-flex flex-row justify-content-center\">\n    <h6 class=\"display-6 my-3 text-muted\">Edit Post</h6>\n  </div>\n  <div class=\"container col-md-10\">\n    <form (submit)=\"onSaveEdits(post)\" #post=\"ngForm\" [ngClass]=\"(post.invalid && submitted) ? 'was-validated' : ''\">\n      <div class=\"row\">\n        <div class=\"col-md-6\">\n          <label for=\"postTitle\" class=\"form-label\"><em>Post Title</em></label>\n          <input type=\"text\" class=\"form-control\" id=\"postTitle\" aria-describedby=\"titleHelp\" maxlength=\"40\"\n            minlength=\"3\" required placeholder=\"Ex. COVID-19 Response\" ngModel name=\"title\" #title=\"ngModel\">\n          <div id=\"titleHelp\" class=\"form-text\">Create a concise and descriptive title for your post.</div>\n        </div>\n        <div class=\"col-md-6\">\n          <label for=\"postDepartment\" class=\"form-label\"><em>Department</em></label>\n          <input type=\"text\" class=\"form-control\" list=\"departmentList\" aria-describedby=\"departmentHelp\"\n            aria-label=\"Select or type a department\" required ngModel name=\"department\" #department=\"ngModel\"\n            placeholder=\"Ex. Water\" minlength=\"2\" maxlength=\"30\"/>\n          <datalist id=\"departmentList\">\n            <option *ngFor=\"let item of departments\">{{item}}</option>\n          </datalist>\n          <div id=\"departmentHelp\" class=\"form-text\">Select OR type the department this post will be categorized under.</div>\n        </div>\n      </div>\n\n      <br />\n      <label for=\"postContent\" class=\"form-label\"><em>Content</em></label>\n      <div id=\"contentHelp\" class=\"form-text mb-2\">\n        The body of your post goes here, be as descriptive as you like. You can use markdown to better style your post.\n        <br />\n        <a href=\"https://www.markdownguide.org/cheat-sheet/\" target=\"_blank\" class=\"link-info\">To view a Markdown\n          Cheatsheet to help you style your post here, click here.</a>\n      </div>\n      <textarea class=\"form-control\" id=\"postContent\" rows=\"20\" maxlength=\"1200\" minlength=\"15\" required\n        placeholder=\"Ex. Steps to overcome the issue...\" ngModel name=\"body\" #body=\"ngModel\"></textarea>\n      <br>\n      <button type=\"button\" class=\"btn btn-success btn-lg\" type=\"submit\">Save changes</button>\n    </form>\n  </div>\n\n</div>\n","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Post } from 'src/app/models/post.model';\nimport { AuthService } from 'src/app/services/auth-service';\nimport { PostService } from 'src/app/services/post-service.service';\n\n@Component({\n  selector: 'app-edit-post',\n  templateUrl: './edit-post.component.html',\n  styleUrls: ['./edit-post.component.css']\n})\nexport class EditPostComponent implements OnInit {\n\n  constructor(private route: ActivatedRoute, public postService: PostService, public authService: AuthService, public router: Router) { }\n  submitted = false;\n  departments: string[] = [];\n  @ViewChild('post') postForm!: NgForm;\n\n\n\n  viewingPost: Post | undefined;\n\n  ngOnInit(): void {\n    this.departments = this.postService.getDepartments();\n    this.getPost();\n  }\n\n  getPost(): void {\n    const id = this.route.snapshot.paramMap.get('id');\n    if (id !== null) {\n      this.postService.getPost(id, true).then(p => {\n        this.viewingPost = p;\n        this.postForm.form.patchValue({\n          title: this.viewingPost?.title,\n          department: this.viewingPost?.department,\n          body: this.viewingPost?.text\n        })\n      });\n    }\n\n  }\n\n  onSaveEdits(PostForm: NgForm): void {\n    this.submitted = true;\n    if (PostForm.invalid) {\n      console.log(PostForm.controls)\n      return;\n    }\n    const post: Post = {\n      id: this.route.snapshot.paramMap.get('id')!,\n      title: PostForm.value.title,\n      username: this.authService.getEmail(),\n      department: PostForm.value.department,\n      text: PostForm.value.body\n    };\n    //TODO redirect to updated post\n    this.postService.updatePost(post).then(updatedPostId => this.router.navigate([`/`])).catch(err => alert(\"Error updating post, try again.\"));\n  }\n\n}\n","<div class=\"container pb-5\">\n  <div class=\"d-flex flex-row justify-content-between\">\n    <h1 class=\"display-6 my-3\">Latest Posts</h1>\n    <h4 class=\"display-6 my-3\">{{getDate()}}</h4>\n  </div>\n  <div class=\"d-flex flex-row\">\n    <button id=\"refreshButton\" class=\"btn btn-success mx-1\" title=\"Refresh post list\" (click)=\"refreshPosts($event)\">\n      <mat-icon>refresh</mat-icon> Refresh posts\n    </button>\n  </div>\n  <div class=\"accordion my-4\" id=\"accordionDepartmentLatest-{{i}}\"\n    *ngFor=\"let department of departments; let i = index\">\n    <div class=\"accordion-item\">\n      <h2 class=\"accordion-header\" id=\"{{'heading-'+i}}\">\n        <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" [attr.data-bs-target]=\"'#collapse-'+i\"\n          aria-expanded=\"true\" [attr.aria-controls]=\"'#collapse-'+i\">\n          {{department | titlecase}}\n        </button>\n      </h2>\n      <div id=\"{{'collapse-' + i}}\" class=\"accordion-collapse collapse show\" [attr.aria-labelledby]=\"'heading-'+i\"\n        [attr.data-bs-parent]=\"'#accordionDepartmentLatest-'+i\">\n        <div class=\"accordion-body p-0\">\n          <div class=\"table-responsive\">\n            <table class=\"table table-hover m-0\">\n              <tbody>\n                <tr\n                  *ngFor=\"let departmentPost of getDepartmentPosts(department, departmentCurrentPage.get(department) || 1)\"\n                  class=\"position-relative\" style=\"transform: rotate(0);\">\n                  <td class=\"col-2\">{{departmentPost.title | titlecase}}</td>\n                  <td class=\"col-5\" [innerHtml]=\"getCleanExcerpt(departmentPost.text)\"></td>\n                  <td class=\"col-2\">\n                    <p class=\"blockquote-footer my-0\"><small>{{departmentPost.username.split(\"@\")[0]}}\n                        <br />{{getDate(departmentPost.timestamp)}}</small></p>\n                  </td>\n                  <td class=\"col\">\n                    <a [routerLink]=\"['/post/'+departmentPost.id]\" class=\" mx-3 stretched-link\">\n                      View\n                    </a>\n                    <span style=\"position:relative; z-index:2\">\n                      <a [routerLink]=\"['/post/edit/'+departmentPost.id]\" class=\"btn btn-primary mx-1\"\n                        placement=\"bottom\" ngbTooltip=\"Edit post\">\n                        <mat-icon>edit</mat-icon>\n                      </a>\n                      <button (click)=\"onDelete(departmentPost.id!)\" class=\"btn btn-danger mx-1\"\n                        placement=\"bottom\" ngbTooltip=\"Delete post\">\n                        <mat-icon>delete_forever</mat-icon>\n                      </button>\n                    </span>\n                  </td>\n                </tr>\n                <tr class=\"h-100\"\n                  [class.d-none]=\"departmentPages.get(department) !== departmentCurrentPage.get(department)\"></tr>\n                  <!-- <p>Pages: {{departmentPages.get(department)}}</p>\n                  <p>Current: {{departmentCurrentPage.get(department)}}</p> -->\n\n                <tr *ngIf=\"departmentPages.get(department)! > 1\" class=\"\">\n                  <td colspan=\"12\">\n                    <nav aria-label=\"...\">\n                      <ul class=\"pagination justify-content-center my-0\">\n                        <li class=\"page-item\" [class.active]=\"departmentCurrentPage.get(department) === pageNum+1\"\n                          [attr.aria-current]=\"pageNum+1==departmentCurrentPage.get(department) ? 'page' : null\"\n                          *ngFor=\"let page of [].constructor(departmentPages.get(department)), let pageNum = index\">\n                          <a [attr.href]=\"departmentCurrentPage.get(department) === pageNum+1 ? null : '#'\"\n                            class=\"page-link\" (click)=\"changeDepartmentPage(department,pageNum+1)\">{{pageNum+1}}</a>\n                          <!-- <p>Current page: {{getDepartmentCurrentPage(department)}}</p> -->\n                        </li>\n                      </ul>\n                    </nav>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n<ng-template #deleteModal let-modal>\n  <div class=\"modal-header\">\n    <h5 class=\"modal-title\">Confirm delete</h5>\n    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"\n      (click)=\"modal.dismiss('Close')\"></button>\n  </div>\n  <div class=\"modal-body\">\n    <p>Are you sure you want to delete this post?</p>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" ngbAutofocus\n      (click)=\"modal.close('Cancel')\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"modal.close('Confirm')\">Confirm delete</button>\n  </div>\n</ng-template>\n","import { AfterViewChecked, AfterViewInit, Component, ElementRef, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { Subscription } from 'rxjs';\nimport { Post } from 'src/app/models/post.model';\nimport { PostService } from \"src/app/services/post-service.service\"\n\n@Component({\n  selector: 'app-order-placed',\n  templateUrl: './post-list.component.html',\n  styleUrls: ['./post-list.component.css']\n})\nexport class PostListComponent implements OnInit, OnDestroy {\n\n  posts: Post[] = [];\n  departments: string[] = [];\n  departmentPages: Map<string, number> = new Map<string, number>();\n  departmentCurrentPage: Map<string, number> = new Map<string, number>();\n\n  constructor(public postService: PostService, private modalService: NgbModal) { }\n  private postsSubscription!: Subscription;\n  @ViewChild('deleteModal', { static: true }) deleteModal!: ElementRef;\n\n  ngOnInit() {\n    this.getPosts();\n    this.postsSubscription = this.postService.getPostUpdateListener().subscribe((posts: Post[]) => {\n      // console.log(posts);\n      this.posts = posts;\n      this.departments = this.postService.getDepartments();\n      // console.log(this.postService.getDepartments());\n    });\n\n  }\n\n  ngOnDestroy(): void {\n    this.postsSubscription.unsubscribe();\n  }\n\n  getPosts() {\n    this.posts = this.postService.getPosts();\n  }\n\n  onDelete(postID: string): void {\n    let closeResult = '';\n    this.modalService.open(this.deleteModal, { ariaLabelledBy: 'modal-basic-title', centered: true }).result.then((reason: any) => {\n      if (reason == \"Confirm\") {\n        // console.log(reason);\n\n        this.departmentPagesChange(this.posts.find(p => p.id == postID)?.department || \"\");\n\n        this.postService.deletePost(postID);\n      }\n    });\n  }\n\n  getDepartmentPosts(department: string, page?: number): Post[] {\n    // console.log(page);\n    const departmentPosts = this.posts.filter(p => p.department === department).filter((p, index) =>\n      index >= (((page || 1) - 1) * 4) && index < (((page || 1) - 1) * 4) + 4);\n\n    this.departmentPagesChange(department);\n    return departmentPosts;\n  }\n\n  getDate(timestamp?: string): string {\n    const date = timestamp ? new Date(timestamp) : new Date();\n    return timestamp ? date.toLocaleString() : date.toDateString();\n  }\n\n  refreshPosts(button: Event) {\n    this.getPosts();\n    (button.target as HTMLButtonElement).classList.add(\"loading\");\n    setTimeout(() => {\n      (button.target as HTMLButtonElement).blur();\n      (button.target as HTMLButtonElement).classList.remove(\"loading\");\n    }, 1200);\n  }\n\n  getCleanExcerpt(input: string): string {\n    const excerpt = input.replace(/<[^>]*>/g, '').trim().substr(0, 50).trim();\n    if (excerpt === '' || excerpt.match(/^ *$/) !== null) {\n      return 'Click to view this post.';\n    }\n    return excerpt.concat('...');\n  }\n\n  changeDepartmentPage(department: string, pageNum: number) {\n    this.departmentCurrentPage.set(department, pageNum);\n  }\n\n  getDepartmentCurrentPage(department: string): number {\n    return this.departmentCurrentPage.get(department)!;\n  }\n\n  departmentPagesChange(department: string) {\n    const departmentPosts = this.posts.filter((p) => p.department === department);\n\n    const departmentPostPagesLength = Math.ceil(departmentPosts.length / 4);\n    this.departmentPages.set(department, departmentPostPagesLength);\n    this.departmentCurrentPage.set(department, (this.departmentCurrentPage.get(department) || 1) > departmentPostPagesLength ? 1 : this.departmentCurrentPage.get(department) || 1);\n  }\n}\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuardService } from '../services/router-services/auth-guard.service';\nimport { LoginComponent } from '../components/auth/login/login.component';\nimport { RegisterComponent } from '../components/auth/register/register.component';\nimport { PostListComponent } from '../components/post/post-list/post-list.component';\nimport { ViewPostComponent } from '../components/post/view-post/view-post.component';\nimport { PostCreateComponent } from '../components/post/post-create/post-create.component';\nimport { EditPostComponent } from '../components/post/edit-post/edit-post.component';\nimport { PermissionComponent } from '../components/permission/permission.component';\n// import { OrderCreateComponent } from '../components/order/order-create/order-create.component';\n// import { OrderPlacedComponent } from '../components/order/order-placed/order-placed.component';\n\n\nconst routes: Routes = [\n  { path: \"\", component: PostListComponent, canActivate: [AuthGuardService] },\n  { path: \"post/create\", component: PostCreateComponent, canActivate: [AuthGuardService] },\n  { path: \"post/edit/:id\", component: EditPostComponent, canActivate: [AuthGuardService] },\n  { path: \"post/:id\", component: ViewPostComponent, canActivate: [AuthGuardService] },\n  { path: \"users\", component: PermissionComponent, canActivate: [AuthGuardService] },\n  { path: \"login\", component: LoginComponent },\n  { path: \"register\", component: RegisterComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Post } from 'src/app/models/post.model';\nimport { PostService } from 'src/app/services/post-service.service';\n\n@Component({\n  selector: 'app-view-post',\n  templateUrl: './view-post.component.html',\n  styleUrls: ['./view-post.component.css']\n})\nexport class ViewPostComponent implements OnInit {\n\n  viewingPost: Post | undefined;\n\n  constructor(private route: ActivatedRoute, private postService: PostService) { }\n\n  ngOnInit(): void {\n    this.getPost();\n  }\n\n  getPost(): void {\n    const id = this.route.snapshot.paramMap.get('id');\n    if (id !== null) {\n      this.postService.getPost(id).then(p => {\n        this.viewingPost = p;\n      });\n    }\n  }\n\n  getDate(timestamp?: string): string {\n    const date = timestamp ? new Date(timestamp) : new Date();\n    return timestamp ? date.toLocaleString() : date.toDateString();\n  }\n\n}\n","<div class=\"container pb-5\">\n  <div class=\"d-flex flex-row justify-content-center\">\n    <h6 class=\"display-6 my-3 text-muted\">Viewing Post</h6>\n  </div>\n\n  <!-- <p class=\"my-0 text-muted text-muted\"><small><em>Title</em></small></p> -->\n  <h2 class=\"display-5\">{{viewingPost?.title || \"Missing Title\"}}</h2>\n  <p class=\"blockquote-footer my-0\">{{viewingPost?.username!.split(\"@\")[0] || \"Missing username\"}}\n    &nbsp;&nbsp;|&nbsp;&nbsp;{{getDate(viewingPost?.timestamp) || \"Missing timestamp\"}}</p> \n  <br />\n  <!-- <p class=\"my-0 text-muted text-muted\"><small><em>Content</em></small></p> -->\n  <div class=\"lead\" [innerHtml]=\"viewingPost?.text\"></div>\n  \n\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<div class=\"container pb-5\">\n  <div class=\"d-flex flex-row justify-content-between\">\n    <h1 class=\"display-6 my-3\">Manage users</h1>\n  </div>\n  <div>\n    <table class=\"table table-hover m-0 table-striped\">\n      <thead>\n        <tr>\n          <th scope=\"col\">User</th>\n          <th scope=\"col\">Is a high level user?</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let user of users; let i = index\">\n          <td class=\"col\">{{user.email | titlecase}}</td>\n          <td class=\"col-2\">\n              <input class=\"form-check-input\" type=\"checkbox\" [checked]=\"user.isHighLevel\" id=\"flexCheckDefault-{{i}}\" aria-label=\"Is user a high level user.\"\n              (click)=\"changePermission(user.id, $event)\">\n          </td>\n        </tr>\n\n        <tr class=\"h-100\" [class.d-none]=\"pages !== currentPage\">\n        </tr>\n\n        <tr *ngIf=\"pages > 1\">\n          <td colspan=\"12\">\n            <nav aria-label=\"...\">\n              <ul class=\"pagination justify-content-center my-0\">\n                <li class=\"page-item\" [class.active]=\"currentPage === pageNum+1\"\n                  [attr.aria-current]=\"pageNum+1==currentPage ? 'page' : null\"\n                  *ngFor=\"let page of [].constructor(pages), let pageNum = index\">\n                  <a [attr.href]=\"currentPage === pageNum+1 ? null : '#'\" class=\"page-link\"\n                    (click)=\"setPage(pageNum+1)\">{{pageNum+1}}</a>\n                </li>\n              </ul>\n            </nav>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  </div>\n</div>\n<ng-template #deleteModal let-modal>\n  <div class=\"modal-header\">\n    <h5 class=\"modal-title\">Confirm delete</h5>\n    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"\n      (click)=\"modal.dismiss('Close')\"></button>\n  </div>\n  <div class=\"modal-body\">\n    <p>Are you sure you want to delete this post?</p>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" ngbAutofocus\n      (click)=\"modal.close('Cancel')\">Cancel</button>\n    <button type=\"button\" class=\"btn btn-danger\" (click)=\"modal.close('Confirm')\">Confirm delete</button>\n  </div>\n</ng-template>\n","import { Component, OnInit } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { UserService } from 'src/app/services/user-service.service';\n\n@Component({\n  selector: 'app-permission',\n  templateUrl: './permission.component.html',\n  styleUrls: ['./permission.component.css']\n})\nexport class PermissionComponent implements OnInit {\n\n  users: { id: string, email: string, isHighLevel: boolean }[] = [];\n  pages: number = this.users.length;\n  currentPage: number = 1;\n\n  private userSubscription!: Subscription;\n\n  constructor(public userService: UserService) { }\n\n  ngOnInit() {\n    this.getUsers()\n    this.userSubscription = this.userService.getUserUpdateListener().subscribe((users: { id: string, email: string, isHighLevel: boolean }[]) => {\n      this.users = users;\n      // console.log(this.users);\n    });\n  }\n\n  getUsers() {\n    this.users = this.userService.getUsers().filter((p, index) =>\n      index >= (((this.currentPage || 1) - 1) * 6) && index <= (((this.currentPage || 1) - 1) * 6) + 6);\n  }\n\n  setPage(pageTo: number) {\n    this.currentPage = pageTo;\n  }\n\n  changePermission(userID:string, checkbox: Event){\n    const isChecked = (checkbox.target as HTMLInputElement).checked;\n    \n    this.userService.setPermissions(userID, isChecked);\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { AuthService } from 'src/app/services/auth-service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  emailError = \"Email format: example@gov.za\";\n  passwordError = \"Permitted characters: 0-9, a-z, A-Z, @, *, #\"\n  submitted = false;\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit() {\n  }\n\n  onLogin(form: NgForm) {\n    this.submitted = true;\n    if (form.invalid) {\n      return;\n    }\n    this.authService.login(form.value.email, form.value.password).catch(err => {\n      // console.log(err);\n    });\n  }\n\n}\n","<div id=\"loginBackground\" class=\"container-fluid bg-secondary h-100\">\n  <div class=\"container d-flex flex-column h-100 justify-content-center align-items-center\">\n    <h1 class=\"display-4 text-center text-white\">Welcome members!</h1>\n    <div class=\"card\" style=\"min-width: 50vw;\">\n      <div class=\"card-body\">\n        <h5 class=\"card-title\">Secure log in</h5>\n        <div class=\"container\">\n          <form name=\"login justify-content-center align-items-center\" #loginForm=\"ngForm\" (submit)=\"onLogin(loginForm)\"\n            [ngClass]=\"(loginForm.invalid && submitted) ? 'was-validated' : ''\">\n            <div class=\" mb-3\">\n              <label for=\"usernameInput\" class=\"form-label\">Email address</label>\n              <input id=\"usernameInput\" class=\"form-control\" type=\"text\" ngModel name=\"email\"\n                placeholder=\"example@gov.za\" required minlength=\"5\" pattern=\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\"\n                #email=\"ngModel\" aria-describedby=\"emailHelp\" autocomplete=\"email\">\n              <div class=\"invalid-feedback\">\n                {{emailError}}\n              </div>\n              <div id=\"emailHelp\" class=\"form-text\">Please use your department allocated email address, usually ending\n                in\n                \".gov.za\"</div>\n            </div>\n            <hr>\n            <div class=\"mb-3\">\n              <label for=\"passwordInput\" class=\"form-label\">Password</label>\n              <input id=\"passwordInput\" type=\"password\" class=\"form-control\" pattern=\"^([a-zA-Z0-9@*#]{8,15})$\" ngModel\n                name=\"password\" placeholder=\"Password\" required #password=\"ngModel\" aria-describedby=\"passwordHelp\" autocomplete=\"current-password\">\n              <div class=\"invalid-feedback\">\n                {{passwordError}}\n              </div>\n              <div id=\"passwordHelp\" class=\"form-text\"><a href=\"#\">Forgot your password?</a></div>\n            </div>\n            <button type=\"submit\" class=\"btn btn-primary\">Log in</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","<div class=\"container pb-5\">\n  <div class=\"d-flex flex-row justify-content-center\">\n    <h6 class=\"display-6 my-3 text-muted\">Create Post</h6>\n  </div>\n  <div class=\"container col-md-10\">\n    <form (submit)=\"onCreatePost(post)\" #post=\"ngForm\" [ngClass]=\"(post.invalid && submitted) ? 'was-validated' : ''\">\n      <div class=\"row\">\n        <div class=\"col-md-6\">\n          <label for=\"postTitle\" class=\"form-label\"><em>Post Title</em></label>\n          <input type=\"text\" class=\"form-control\" id=\"postTitle\" aria-describedby=\"titleHelp\" maxlength=\"40\"\n            minlength=\"3\" required placeholder=\"Ex. COVID-19 Response\" ngModel name=\"title\" #title=\"ngModel\">\n          <div id=\"titleHelp\" class=\"form-text\">Create a concise and descriptive title for your post.</div>\n        </div>\n        <div class=\"col-md-6\">\n          <label for=\"postDepartment\" class=\"form-label\"><em>Department</em></label>\n          <input type=\"text\" class=\"form-control\" list=\"departmentList\" aria-describedby=\"departmentHelp\"\n            aria-label=\"Select or type a department\" required ngModel name=\"department\" #department=\"ngModel\"\n            placeholder=\"Ex. Water\" minlength=\"2\" maxlength=\"30\" />\n          <datalist id=\"departmentList\">\n            <option *ngFor=\"let item of departments\">{{item}}</option>\n          </datalist>\n          <div id=\"departmentHelp\" class=\"form-text\">Select OR type the department this post will be categorized under.</div>\n        </div>\n      </div>\n\n      <br />\n      <label for=\"postContent\" class=\"form-label\"><em>Content</em></label>\n      <div id=\"contentHelp\" class=\"form-text mb-2\">\n        The body of your post goes here, be as descriptive as you like. You can use markdown to better style your post.\n        <br />\n        <a href=\"https://www.markdownguide.org/cheat-sheet/\" target=\"_blank\" class=\"link-info\">To view a Markdown\n          Cheatsheet to help you style your post here, click here.</a>\n      </div>\n      <textarea class=\"form-control\" id=\"postContent\" rows=\"20\" maxlength=\"5555555\" minlength=\"15\" required\n        placeholder=\"Ex. Steps to overcome the issue...\" ngModel name=\"body\" #body=\"ngModel\"></textarea>\n      <br>\n      <button type=\"button\" class=\"btn btn-success btn-lg\" type=\"submit\">Post</button>\n    </form>\n  </div>\n\n</div>\n\n<!-- <h5>Create your order here</h5>\n<mat-card>\n  <form (submit)=\"onAddOrder(postOrder)\" #postOrder=\"ngForm\" novalidate>\n    <mat-form-field>\n      <input matInput type=\"text\" name=\"username\" ngModel placeholder=\"Username\" required minlength=\"8\"\n        #username=\"ngModel\" />\n      <mat-error *ngIf=\"username.invalid\">{{usernameError}}</mat-error>\n    </mat-form-field>\n\n    <br />\n    <mat-form-field><input matInput type=\"email\" placeholder=\"Email address\" ngModel name=\"email\" required\n         #email=\"ngModel\" />\n      <mat-error *ngIf=\"email.invalid\">{{emailError}}</mat-error>\n    </mat-form-field>\n\n    <br />\n    <mat-form-field><textarea matInput rows=\"6\" ngModel name=\"enteredOrder\" required maxlength=\"50\" #enteredOrder=\"ngModel\" ></textarea>\n      <mat-error *ngIf=\"enteredOrder.invalid\">{{orderError}}</mat-error>\n    </mat-form-field>\n    <button mat-raised-button type=\"submit\">Order Now</button>\n  </form>\n</mat-card>\n<hr /> -->\n<!-- <h6>{{ newOrder }}</h6> -->\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from \"@angular/forms\"\nimport { PostService } from 'src/app/services/post-service.service';\nimport { Post } from \"src/app/models/post.model\"\nimport { AuthService } from 'src/app/services/auth-service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-order-create',\n  templateUrl: './post-create.component.html',\n  styleUrls: ['./post-create.component.css']\n})\nexport class PostCreateComponent implements OnInit {\n\n  constructor(public postService: PostService, public authService: AuthService, public router: Router) { }\n  submitted = false;\n  departments: string[] = [];\n\n  ngOnInit(): void {\n    this.departments = this.postService.getDepartments();\n  }\n\n  // usernameError = \"Username error\"\n  // emailError = \"Email error\"\n  // orderError = \"Order error\"\n\n  onCreatePost(PostForm: NgForm): void {\n    this.submitted = true;\n    if (PostForm.invalid) {\n      return;\n    }\n    const post: Post = {\n      title: PostForm.value.title,\n      username: this.authService.getEmail(),\n      department: PostForm.value.department,\n      text: PostForm.value.body\n    };\n    //TODO redirect to created post after creation or show error\n    this.postService.addPost(post).then(newPostId => this.router.navigate([`/`])).catch(err => alert(\"Error creating post, try again.\"));\n  }\n\n}\n","import { Component, ElementRef, Inject, OnInit, ViewChild } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\nexport class ErrorComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: { message: string }, private modalService: NgbModal) { }\n  @ViewChild('unknwonErrorModal', { static: true }) deleteModal!: ElementRef;\n\n  ngOnInit() {\n    this.modalService.open(this.deleteModal, { ariaLabelledBy: 'modal-basic-title', centered: true });\n  }\n\n}\n","<ng-template #unknwonErrorModal let-modal>\n  <div class=\"modal-header\">\n    <h5 class=\"modal-title\">Unknown error</h5>\n    <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"\n      (click)=\"modal.dismiss('Close')\"></button>\n  </div>\n  <div class=\"modal-body\">\n    <p>{{data.message}}</p>\n  </div>\n  <div class=\"modal-footer\">\n    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"modal.close('Okay')\">Okay</button>\n  </div>\n</ng-template>","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpHeaders\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AuthService } from '../services/auth-service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  constructor(private authService: AuthService) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    const authToken = this.authService.getToken();\n\n    request.headers.append('Content-Type', 'application/json');\n    request.headers.append('Authorization', 'Bearer ' + authToken);\n\n    const authRequest = request.clone({\n      headers: request.headers.append('Content-Type', 'application/json').append('Authorization', 'Bearer ' + authToken),\n    });\n    return next.handle(authRequest);\n  }\n}\n","<main>\n  <div>\n    <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <div class=\"container-fluid\">\n        <a class=\"navbar-brand\" [routerLink]=\"['/']\">\n          <img src=\"../assets/logos/1200px-Coat_of_arms_of_South_Africa.svg.png\" alt=\"\" width=\"27\" height=\"33\"\n            class=\"d-inline-block align-text-top\">\n          <span class=\"ms-4\">Department Bulletin Board</span>\n        </a>\n        <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarText\"\n          aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarText\">\n          <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\" *ngIf=\"authService.isLoggedIn()\">\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" [routerLink]=\"['/']\" routerLinkActive=\"router-link-active\" [routerLinkActiveOptions]=\"{exact:true}\">\n                <mat-icon>forum</mat-icon> View posts\n              </a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" [routerLink]=\"['post/create']\" routerLinkActive=\"router-link-active\" [routerLinkActiveOptions]=\"{exact:true}\">\n                <mat-icon>add_comment</mat-icon> Create post\n              </a>\n            </li>\n          </ul>\n          <ul class=\"navbar-nav ms-auto mb-2 mb-lg-0\" *ngIf=\"authService.isLoggedIn(); else loggedOut\">\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" [routerLink]=\"['/users']\" routerLinkActive=\"router-link-active\" [routerLinkActiveOptions]=\"{exact:true}\">\n                <mat-icon>settings</mat-icon> Manage Users\n              </a>\n            </li>\n            <li class=\"nav-item\">\n              <a class=\"nav-link\" (click)=\"logout()\">\n                <mat-icon>logout</mat-icon> Log Out\n              </a>\n            </li>\n          </ul>\n          <ng-template #loggedOut>\n            <ul class=\"navbar-nav ms-auto mb-2 mb-lg-0\">\n              <li class=\"nav-item\" *ngIf=\"isLogin()\">\n                <a class=\"nav-link\" [routerLink]=\"['/register']\" routerLinkActive=\"router-link-active\">\n                  <mat-icon>person_add</mat-icon> Register\n                </a>\n              </li>\n              <li class=\"nav-item\" *ngIf=\"!isLogin()\">\n                <a class=\"nav-link\" [routerLink]=\"['/login']\" routerLinkActive=\"router-link-active\">\n                  <mat-icon>login</mat-icon> Log In\n                </a>\n              </li>\n            </ul>\n          </ng-template>\n        </div>\n      </div>\n    </nav>\n  </div>\n  <router-outlet></router-outlet>\n</main>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from './services/auth-service';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  constructor(public authService: AuthService, public router: Router) { }\n  ngOnInit() {\n  }\n\n  isLogin(): boolean {\n    return this.router.isActive('/login', true);\n  }\n\n  logout(){\n    this.authService.logout();\n  }\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  users: { id: string, email: string, isHighLevel: boolean }[] = [];\n  private updatedUsers = new Subject<{ id: string, email: string, isHighLevel: boolean }[]>();\n\n  constructor(private http: HttpClient) { }\n\n  getUsers(): { id: string, email: string, isHighLevel: boolean }[] {\n    this.http.get<{ message: string, users: { id: string, email: string, isHighLevel: boolean }[] }>('/api/user')\n      .pipe(map((userData) => {\n        return userData.users.map((user: any) => {\n          return {\n            id: user._id,\n            email: user.email,\n            isHighLevel: user.isHighLevel,\n          };\n        });\n      }))\n      .subscribe((changedUsers) => {\n        this.users = changedUsers;\n        this.updatedUsers.next([...this.users]);\n      });\n    return [...this.users];\n  }\n\n  getUserUpdateListener(): Observable<{ id: string, email: string, isHighLevel: boolean }[]> {\n    return this.updatedUsers.asObservable();\n  }\n\n  setPermissions(userID: string, isHighLevelUser: boolean) {\n    // console.log(isHighLevelUser);\n    this.http.post<{ message: string, users: { id: string, email: string, isHighLevel: boolean }[] }>(`/api/user/permissions/${userID}`, {isHighLevelUser}, ).toPromise();\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from \"@angular/forms\";\nimport { HttpClientModule, HTTP_INTERCEPTORS } from \"@angular/common/http\"\n\nimport { AppComponent } from './app.component';\n// import { OrderCreateComponent } from \"./components/order/order-create/order-create.component\"\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AppRoutingModule } from './router/app-routing.routings';\nimport { LoginComponent } from './components/auth/login/login.component';\nimport { RegisterComponent } from './components/auth/register/register.component';\nimport { AuthInterceptor } from './interceptors/auth.interceptor';\nimport { PostListComponent } from './components/post/post-list/post-list.component';\nimport { ViewPostComponent } from './components/post/view-post/view-post.component';\n\n//NgBootstrap dependency for toolsets\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { PostCreateComponent } from './components/post/post-create/post-create.component';\nimport { ErrorInterceptor } from './interceptors/error.interceptor';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { EditPostComponent } from './components/post/edit-post/edit-post.component';\nimport { PermissionComponent } from './components/permission/permission.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    // OrderCreateComponent,\n    ViewPostComponent,\n    PostListComponent,\n    LoginComponent,\n    RegisterComponent,\n    PostCreateComponent,\n    EditPostComponent,\n    PermissionComponent\n  ],\n  imports: [\n    AppRoutingModule,\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n\n    MatIconModule,\n    MatDialogModule,\n    NgbModule,\n\n    BrowserAnimationsModule,\n    HttpClientModule,\n  ],\n  providers: [{ provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true },\n  { provide: HTTP_INTERCEPTORS, useClass: ErrorInterceptor, multi: true }],\n  bootstrap: [AppComponent],\n})\nexport class AppModule { }\n","import { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthData } from './auth-data.model';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class AuthService {\r\n    private token: string | null = '';\r\n    private email = '';\r\n    constructor(private http: HttpClient, public router: Router) { }\r\n\r\n    createUser(email: string, password: string): Promise<HttpResponse<object>> {\r\n        const authData: AuthData = { email, password };\r\n        return this.http.post('/api/user/signup', authData, { observe: 'response' }).toPromise();\r\n    }\r\n\r\n    //Stores token locally\r\n    login(email: string, password: string): Promise<void> {\r\n        const authData: AuthData = {\r\n            email: email, password: password\r\n        };\r\n        return this.http.post<{ token: string }>('/api/user/login', authData).toPromise().then(response => {\r\n            const token = response.token;\r\n            this.token = token;\r\n            this.email = email;\r\n            this.router.navigate(['/']);\r\n        });\r\n    }\r\n\r\n    //Clears the token from the client\r\n    logout() {\r\n        this.http.post<{ message: string }>('/api/user/logout', {token: this.token}).toPromise().then(response => {\r\n            this.router.navigate(['/login']);\r\n        });\r\n        this.token = null;\r\n        //This window reload clears all JS private data from the session\r\n        window.location.reload();\r\n    }\r\n\r\n    getToken(): string | null {\r\n        return this.token || null;\r\n    }\r\n\r\n    isLoggedIn(): boolean {\r\n        return this.getToken() != (\"\" || null);\r\n    }\r\n\r\n    getEmail(): string {\r\n        return this.email;\r\n    }\r\n\r\n}","import { Post } from '../models/post.model';\nimport { Injectable } from '@angular/core';\nimport { Observable, Subject } from 'rxjs';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n\n  private posts: Post[] = [];\n  private updatedPosts = new Subject<Post[]>();\n  private departments: string[] = [];\n\n  constructor(private http: HttpClient) { }\n\n  getPosts(): Post[] {\n    this.http.get<{ message: string, posts: Post[] }>('/api/posts')\n      .pipe(map((postData) => {\n        return postData.posts.map((post: any) => {\n          return {\n            id: post._id,\n            title: post.title,\n            timestamp: post.timestamp || '',\n            username: post.username,\n            department: post.department,\n            text: post.text,\n          };\n        });\n      }))\n      .subscribe((changedPosts) => {\n        this.posts = changedPosts;\n        this.updatedPosts.next([...this.posts]);\n      });\n    return [...this.posts];\n  }\n\n  async getPost(id: string, raw: boolean = false): Promise<Post> {\n    return raw == false ? this.posts.find(p => p.id === id) ?? await this.fetchPost(id, false).then(p => {\n      return p.post;\n    }) : await this.fetchPost(id, raw).then(p => {\n      return p.post;\n    });\n  }\n\n  fetchPost(id: string, raw: boolean = false): Promise<{ message: string, post: Post, raw?: boolean }> {\n    const params = new HttpParams().set('id', id).set('raw', raw.toString());\n    return this.http.get<{ message: string, post: Post }>('/api/posts', { params }).toPromise();\n  }\n\n  async addPost(post: Post): Promise<string | null | undefined> {\n    return this.http.post<{ message: string }>('/api/posts', post).toPromise().then((responsePostData) => {\n      // console.log(responsePostData.message);\n      this.posts.push(post);\n      this.updatedPosts.next(this.getPosts());\n      return Promise.resolve(post.id);\n    });\n  }\n\n  async updatePost(post: Post): Promise<string | null | undefined> {\n    return this.http.post<{ message: string; }>(`/api/posts/edit/${post.id}`, post).toPromise().then((responsePostData) => {\n      // console.log(responsePostData.message);\n      this.posts[this.posts.findIndex(p => p.id = post.id)] = post;\n      this.updatedPosts.next(this.getPosts());\n      return Promise.resolve(post.id);\n    })\n  }\n\n  getPostUpdateListener(): Observable<Post[]> {\n    return this.updatedPosts.asObservable();\n  }\n\n  deletePost(postID: string): void {\n    this.http.delete(`/api/posts/${postID}`)\n      .subscribe(() => {\n        this.posts = this.posts.filter(posts => posts.id !== postID);\n        this.updatedPosts.next([...this.posts]);\n        // console.log('Deleted post.');\n      });\n  }\n\n  getDepartments(): string[] {\n    return this.departments = this.posts.map(post => post.department).filter((value, index, self) => self.indexOf(value) === index);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ErrorComponent } from '../components/error/error/error.component';\n\n\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n\n  constructor(private dialog: MatDialog) { }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\n    return next.handle(request).pipe(\n      catchError((error: HttpErrorResponse) => {\n        let errorMessage = \"Unknown error.\";\n        if (error.message) {\n          errorMessage = error.message;\n        }\n        // console.log(error);\n        // console.log(errorMessage);\n\n        this.dialog.open(ErrorComponent, { data: { message: errorMessage } });\n\n        return throwError(error);\n      }));\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}